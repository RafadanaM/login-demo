{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\projects\\\\React\\\\login-demo\\\\client\\\\src\\\\AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\naxios.defaults.withCredentials = true;\nconst AuthContext = /*#__PURE__*/createContext();\nconst instance = axios.create({\n  baseURL: \"http://localhost:5000/api\",\n  withCredentials: true\n});\n\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState();\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(null);\n\n  const refreshAuthLogic = failedRequest => {\n    return instance.post(\"/refresh_token\").then(tokenRefreshResponse => {\n      console.log(\"INTERCEPR\");\n      console.log(tokenRefreshResponse.data.token);\n      setToken(tokenRefreshResponse.data.token);\n      console.log(failedRequest.response.config);\n      failedRequest.response.config.headers[\"x-access-token\"] = tokenRefreshResponse.data.token;\n      return Promise.resolve();\n    });\n  };\n\n  createAuthRefreshInterceptor(axios, refreshAuthLogic);\n\n  const getUser = () => {\n    instance.get(\"/userInfo\", {\n      headers: {\n        \"x-access-token\": token\n      }\n    }).then(response => {\n      if (response.data.auth) {\n        setCurrentUser(response.data.user);\n      } else {\n        if (response.data.message === \"Authentication failed\") {\n          console.log(\"auth failed\"); //setToken();\n        }\n      }\n\n      setLoading(false);\n    }).catch(e => {\n      console.log(e); //setToken();\n      //window.location.reload();\n    });\n  };\n\n  const login = (username, password) => {\n    instance.post(\"/login\", {\n      username: username,\n      password: password\n    }).then(res => {\n      console.log(res.data);\n\n      if (res.data.auth) {\n        setCurrentUser(res.data.user);\n        setToken(res.data.token);\n        setMessage(\"\");\n      } else {\n        setMessage(res.data.message);\n      }\n    });\n  };\n\n  const logout = () => {\n    setToken();\n    window.location.reload();\n  };\n\n  useEffect(() => {\n    getUser();\n  }, []);\n  const AuthContextValue = {\n    instance,\n    currentUser,\n    message,\n    login,\n    logout,\n    token\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: AuthContextValue,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"vO4t+IY6ePDTzQxpv7RJIxylcEU=\");\n\n_c = AuthProvider;\n\nconst useAuth = () => {\n  _s2();\n\n  return React.useContext(AuthContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AuthProvider, useAuth };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["D:/projects/React/login-demo/client/src/AuthContext.js"],"names":["React","createContext","useEffect","useState","axios","createAuthRefreshInterceptor","defaults","withCredentials","AuthContext","instance","create","baseURL","AuthProvider","children","currentUser","setCurrentUser","message","setMessage","loading","setLoading","token","setToken","refreshAuthLogic","failedRequest","post","then","tokenRefreshResponse","console","log","data","response","config","headers","Promise","resolve","getUser","get","auth","user","catch","e","login","username","password","res","logout","window","location","reload","AuthContextValue","useAuth","useContext"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\r\naxios.defaults.withCredentials = true;\r\nconst AuthContext = createContext();\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://localhost:5000/api\",\r\n  withCredentials: true,\r\n});\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(null);\r\n\r\n  const refreshAuthLogic = (failedRequest) => {\r\n    return instance.post(\"/refresh_token\").then((tokenRefreshResponse) => {\r\n      console.log(\"INTERCEPR\");\r\n      console.log(tokenRefreshResponse.data.token);\r\n      setToken(tokenRefreshResponse.data.token);\r\n      console.log(failedRequest.response.config);\r\n      failedRequest.response.config.headers[\"x-access-token\"] =\r\n        tokenRefreshResponse.data.token;\r\n      return Promise.resolve();\r\n    });\r\n  };\r\n\r\n  createAuthRefreshInterceptor(axios, refreshAuthLogic);\r\n\r\n  const getUser = () => {\r\n    instance\r\n      .get(\"/userInfo\", {\r\n        headers: { \"x-access-token\": token },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.auth) {\r\n          setCurrentUser(response.data.user);\r\n        } else {\r\n          if (response.data.message === \"Authentication failed\") {\r\n            console.log(\"auth failed\");\r\n            //setToken();\r\n          }\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        //setToken();\r\n        //window.location.reload();\r\n      });\r\n  };\r\n\r\n  const login = (username, password) => {\r\n    instance\r\n      .post(\"/login\", {\r\n        username: username,\r\n        password: password,\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        if (res.data.auth) {\r\n          setCurrentUser(res.data.user);\r\n          setToken(res.data.token);\r\n          setMessage(\"\");\r\n        } else {\r\n          setMessage(res.data.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const logout = () => {\r\n    setToken();\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  const AuthContextValue = {\r\n    instance,\r\n    currentUser,\r\n    message,\r\n    login,\r\n    logout,\r\n    token,\r\n  };\r\n  return (\r\n    <AuthContext.Provider value={AuthContextValue}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nconst useAuth = () => React.useContext(AuthContext);\r\n\r\nexport { AuthProvider, useAuth };\r\n"]},"metadata":{},"sourceType":"module"}