{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\projects\\\\React\\\\login-demo\\\\client\\\\src\\\\AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState } from \"react\";\nconst AuthContext = /*#__PURE__*/createContext({});\n\nconst AuthProvider = props => {\n  _s();\n\n  const [loggedIn, setLoggedIn] = useState(false);\n  useEffect(() => {}, []);\n  const AuthContextValue = {};\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: AuthContextValue,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AuthProvider, \"8ySMdZGY74HFzvXtK44+NjqgpXQ=\");\n\n_c = AuthProvider;\n\nconst useAuth = () => {\n  _s2();\n\n  return React.useContext(AuthContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AuthProvider, useAuth };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["D:/projects/React/login-demo/client/src/AuthContext.js"],"names":["React","createContext","useEffect","useState","AuthContext","AuthProvider","props","loggedIn","setLoggedIn","AuthContextValue","useAuth","useContext"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AAEA,MAAMC,WAAW,gBAAGH,aAAa,CAAC,EAAD,CAAjC;;AAEA,MAAMI,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAAT;AAEA,QAAMO,gBAAgB,GAAG,EAAzB;AACA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEA,gBAA7B;AAAA,OAAmDH;AAAnD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAPD;;GAAMD,Y;;KAAAA,Y;;AASN,MAAMK,OAAO,GAAG;AAAA;;AAAA,SAAMV,KAAK,CAACW,UAAN,CAAiBP,WAAjB,CAAN;AAAA,CAAhB;;IAAMM,O;;AAEN,SAASL,YAAT,EAAuBK,OAAvB","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\n\r\nconst AuthContext = createContext({});\r\n\r\nconst AuthProvider = (props) => {\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const AuthContextValue = {};\r\n  return <AuthContext.Provider value={AuthContextValue} {...props} />;\r\n};\r\n\r\nconst useAuth = () => React.useContext(AuthContext);\r\n\r\nexport { AuthProvider, useAuth };\r\n"]},"metadata":{},"sourceType":"module"}