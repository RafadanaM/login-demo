{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\projects\\\\React\\\\login-demo\\\\client\\\\src\\\\AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"./axios/config\";\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\naxios.defaults.withCredentials = true;\nconst AuthContext = /*#__PURE__*/createContext();\n\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState();\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(null); // const refreshAuthLogic = (failedRequest) => {\n  //   console.log(\"INTERCEPRTTT\");\n  //   return axios\n  //     .post(\"http://localhost:5000/api/refresh_token\")\n  //     .then((tokenRefreshResponse) => {\n  //       setToken(tokenRefreshResponse.data.token);\n  //       console.log(`NEW FUCKING TOKEN : ${tokenRefreshResponse.data.token}`);\n  //       failedRequest.response.config.headers[\"x-access-token\"] =\n  //         tokenRefreshResponse.data.token;\n  //       return Promise.resolve();\n  //     });\n  // };\n  // createAuthRefreshInterceptor(axios, refreshAuthLogic);\n\n  const getUser = () => {\n    console.log(\"call get user1\");\n    axios.get(\"/userInfo\", {\n      headers: {\n        \"x-access-token\": token\n      }\n    }).then(response => {\n      console.log(\"call get user2\");\n      console.log(response);\n\n      if (response.data.auth) {\n        setCurrentUser(response.data.user);\n        setToken(response.data.token);\n      } else {\n        if (response.data.message === \"Authentication failed\") {//setToken();\n        }\n      }\n\n      setLoading(false);\n    }).catch(e => {\n      console.log(e); //setToken();\n      //window.location.reload();\n    });\n  };\n\n  const login = (username, password) => {\n    axios.post(\"/login\", {\n      username: username,\n      password: password\n    }).then(res => {\n      console.log(res.data);\n\n      if (res.data.auth) {\n        setCurrentUser(res.data.user);\n        setToken(res.data.token);\n        setMessage(\"\");\n      } else {\n        setMessage(res.data.message);\n      }\n    });\n  };\n\n  const setNewToken = newToken => {\n    if (newToken !== token) {\n      console.log(\"set new token\");\n      setToken(newToken);\n    }\n  };\n\n  const logout = () => {\n    setToken(); //window.location.reload();\n  };\n\n  useEffect(() => {\n    getUser();\n  }, []);\n  const AuthContextValue = {\n    currentUser,\n    message,\n    login,\n    logout,\n    token,\n    setNewToken\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: AuthContextValue,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"vO4t+IY6ePDTzQxpv7RJIxylcEU=\");\n\n_c = AuthProvider;\n\nconst useAuth = () => {\n  _s2();\n\n  return React.useContext(AuthContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AuthProvider, useAuth };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["D:/projects/React/login-demo/client/src/AuthContext.js"],"names":["React","createContext","useEffect","useState","axios","createAuthRefreshInterceptor","defaults","withCredentials","AuthContext","AuthProvider","children","currentUser","setCurrentUser","message","setMessage","loading","setLoading","token","setToken","getUser","console","log","get","headers","then","response","data","auth","user","catch","e","login","username","password","post","res","setNewToken","newToken","logout","AuthContextValue","useAuth","useContext"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\nimport axios from \"./axios/config\";\r\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\r\naxios.defaults.withCredentials = true;\r\nconst AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(null);\r\n\r\n  // const refreshAuthLogic = (failedRequest) => {\r\n  //   console.log(\"INTERCEPRTTT\");\r\n  //   return axios\r\n  //     .post(\"http://localhost:5000/api/refresh_token\")\r\n  //     .then((tokenRefreshResponse) => {\r\n  //       setToken(tokenRefreshResponse.data.token);\r\n  //       console.log(`NEW FUCKING TOKEN : ${tokenRefreshResponse.data.token}`);\r\n  //       failedRequest.response.config.headers[\"x-access-token\"] =\r\n  //         tokenRefreshResponse.data.token;\r\n  //       return Promise.resolve();\r\n  //     });\r\n  // };\r\n\r\n  // createAuthRefreshInterceptor(axios, refreshAuthLogic);\r\n\r\n  const getUser = () => {\r\n    console.log(\"call get user1\");\r\n    axios\r\n      .get(\"/userInfo\", {\r\n        headers: { \"x-access-token\": token },\r\n      })\r\n      .then((response) => {\r\n        console.log(\"call get user2\");\r\n        console.log(response);\r\n        if (response.data.auth) {\r\n          setCurrentUser(response.data.user);\r\n          setToken(response.data.token);\r\n        } else {\r\n          if (response.data.message === \"Authentication failed\") {\r\n            //setToken();\r\n          }\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        //setToken();\r\n        //window.location.reload();\r\n      });\r\n  };\r\n\r\n  const login = (username, password) => {\r\n    axios\r\n      .post(\"/login\", {\r\n        username: username,\r\n        password: password,\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        if (res.data.auth) {\r\n          setCurrentUser(res.data.user);\r\n          setToken(res.data.token);\r\n          setMessage(\"\");\r\n        } else {\r\n          setMessage(res.data.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const setNewToken = (newToken) => {\r\n    if (newToken !== token) {\r\n      console.log(\"set new token\");\r\n      setToken(newToken);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setToken();\r\n    //window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  const AuthContextValue = {\r\n    currentUser,\r\n    message,\r\n    login,\r\n    logout,\r\n    token,\r\n    setNewToken,\r\n  };\r\n  return (\r\n    <AuthContext.Provider value={AuthContextValue}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nconst useAuth = () => React.useContext(AuthContext);\r\n\r\nexport { AuthProvider, useAuth };\r\n"]},"metadata":{},"sourceType":"module"}