{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\projects\\\\React\\\\login-demo\\\\client\\\\src\\\\AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\nAxios.defaults.withCredentials = true;\nconst AuthContext = /*#__PURE__*/createContext();\n\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState();\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(null);\n\n  const refreshAuthLogic = failedRequest => axios.post(\"http://localhost:5000/api/refresh_token\").then(tokenRefreshResponse => {\n    setToken(tokenRefreshResponse.data.token);\n    failedRequest.response.config.headers[\"x-access-token\"] = tokenRefreshResponse.data.token;\n    return Promise.resolve();\n  });\n\n  createAuthRefreshInterceptor(axios, refreshAuthLogic);\n\n  const getUser = () => {\n    Axios.get(\"http://localhost:5000/api/userInfo\", {\n      headers: {\n        \"x-access-token\": token\n      }\n    }).then(response => {\n      if (response.data.auth) {\n        setCurrentUser(response.data.user);\n      } else {\n        if (response.data.message === \"Authentication failed\") {\n          setToken();\n        }\n      }\n\n      setLoading(false);\n    }).catch(e => {\n      console.log(e);\n      setToken();\n      window.location.reload();\n    });\n  };\n\n  const login = (username, password) => {\n    Axios.post(\"http://localhost:5000/api/login\", {\n      username: username,\n      password: password\n    }).then(res => {\n      console.log(res.data);\n\n      if (res.data.auth) {\n        setCurrentUser(res.data.user);\n        setToken(res.data.token);\n        setMessage(\"\");\n      } else {\n        setMessage(res.data.message);\n      }\n    });\n  };\n\n  const logout = () => {\n    setToken();\n    window.location.reload();\n  };\n\n  useEffect(() => {\n    getUser();\n  }, []);\n  const AuthContextValue = {\n    currentUser,\n    message,\n    login,\n    logout,\n    token\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: AuthContextValue,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"vO4t+IY6ePDTzQxpv7RJIxylcEU=\");\n\n_c = AuthProvider;\n\nconst useAuth = () => {\n  _s2();\n\n  return React.useContext(AuthContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AuthProvider, useAuth };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["D:/projects/React/login-demo/client/src/AuthContext.js"],"names":["React","createContext","useEffect","useState","Axios","createAuthRefreshInterceptor","defaults","withCredentials","AuthContext","AuthProvider","children","currentUser","setCurrentUser","message","setMessage","loading","setLoading","token","setToken","refreshAuthLogic","failedRequest","axios","post","then","tokenRefreshResponse","data","response","config","headers","Promise","resolve","getUser","get","auth","user","catch","e","console","log","window","location","reload","login","username","password","res","logout","AuthContextValue","useAuth","useContext"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\r\nAxios.defaults.withCredentials = true;\r\nconst AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(null);\r\n\r\n  const refreshAuthLogic = (failedRequest) =>\r\n    axios\r\n      .post(\"http://localhost:5000/api/refresh_token\")\r\n      .then((tokenRefreshResponse) => {\r\n        setToken(tokenRefreshResponse.data.token);\r\n        failedRequest.response.config.headers[\"x-access-token\"] =\r\n          tokenRefreshResponse.data.token;\r\n        return Promise.resolve();\r\n      });\r\n  createAuthRefreshInterceptor(axios, refreshAuthLogic);\r\n\r\n  const getUser = () => {\r\n    Axios.get(\"http://localhost:5000/api/userInfo\", {\r\n      headers: { \"x-access-token\": token },\r\n    })\r\n      .then((response) => {\r\n        if (response.data.auth) {\r\n          setCurrentUser(response.data.user);\r\n        } else {\r\n          if (response.data.message === \"Authentication failed\") {\r\n            setToken();\r\n          }\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        setToken();\r\n        window.location.reload();\r\n      });\r\n  };\r\n\r\n  const login = (username, password) => {\r\n    Axios.post(\"http://localhost:5000/api/login\", {\r\n      username: username,\r\n      password: password,\r\n    }).then((res) => {\r\n      console.log(res.data);\r\n      if (res.data.auth) {\r\n        setCurrentUser(res.data.user);\r\n        setToken(res.data.token);\r\n        setMessage(\"\");\r\n      } else {\r\n        setMessage(res.data.message);\r\n      }\r\n    });\r\n  };\r\n\r\n  const logout = () => {\r\n    setToken();\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  const AuthContextValue = {\r\n    currentUser,\r\n    message,\r\n    login,\r\n    logout,\r\n    token,\r\n  };\r\n  return (\r\n    <AuthContext.Provider value={AuthContextValue}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nconst useAuth = () => React.useContext(AuthContext);\r\n\r\nexport { AuthProvider, useAuth };\r\n"]},"metadata":{},"sourceType":"module"}