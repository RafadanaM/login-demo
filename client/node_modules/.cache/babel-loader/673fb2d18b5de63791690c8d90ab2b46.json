{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\projects\\\\React\\\\login-demo\\\\client\\\\src\\\\AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nAxios.defaults.withCredentials = true;\nconst AuthContext = /*#__PURE__*/createContext();\n\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState();\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState();\n\n  const getUser = () => {\n    Axios.get(\"http://localhost:5000/api/userInfo\", {\n      headers: {\n        \"x-access-token\": token\n      }\n    }).then(response => {\n      console.log(response.data);\n\n      if (response.data.auth) {\n        setCurrentUser(response.data.user);\n      } else {\n        if (response.data.message === \"Authentication failed\") {\n          setToken();\n        }\n      }\n\n      setLoading(false);\n    }).catch(e => {\n      console.log(e);\n      setToken();\n      window.location.reload();\n    });\n  };\n\n  const login = (username, password) => {\n    Axios.post(\"http://localhost:5000/api/login\", {\n      username: username,\n      password: password\n    }).then(res => {\n      console.log(res.data);\n\n      if (res.data.auth) {\n        setCurrentUser(res.data.user);\n        setToken(res.data.token);\n        setMessage(\"\");\n      } else {\n        setMessage(res.data.message);\n      }\n    });\n  };\n\n  const logout = () => {\n    setToken();\n    window.location.reload();\n  };\n\n  useEffect(() => {\n    getUser();\n  }, []);\n  const AuthContextValue = {\n    currentUser,\n    message,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: AuthContextValue,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"AxBkwCy+RsDtswwH4fwMPuFE/EY=\");\n\n_c = AuthProvider;\n\nconst useAuth = () => {\n  _s2();\n\n  return React.useContext(AuthContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AuthProvider, useAuth };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["D:/projects/React/login-demo/client/src/AuthContext.js"],"names":["React","createContext","useEffect","useState","Axios","defaults","withCredentials","AuthContext","AuthProvider","children","currentUser","setCurrentUser","message","setMessage","loading","setLoading","token","setToken","getUser","get","headers","then","response","console","log","data","auth","user","catch","e","window","location","reload","login","username","password","post","res","logout","AuthContextValue","useAuth","useContext"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nAxios.defaults.withCredentials = true;\r\nconst AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState();\r\n\r\n  const getUser = () => {\r\n    Axios.get(\"http://localhost:5000/api/userInfo\", {\r\n      headers: { \"x-access-token\": token },\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        if (response.data.auth) {\r\n          setCurrentUser(response.data.user);\r\n        } else {\r\n          if (response.data.message === \"Authentication failed\") {\r\n            setToken();\r\n          }\r\n        }\r\n\r\n        setLoading(false);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        setToken();\r\n        window.location.reload();\r\n      });\r\n  };\r\n\r\n  const login = (username, password) => {\r\n    Axios.post(\"http://localhost:5000/api/login\", {\r\n      username: username,\r\n      password: password,\r\n    }).then((res) => {\r\n      console.log(res.data);\r\n      if (res.data.auth) {\r\n        setCurrentUser(res.data.user);\r\n        setToken(res.data.token);\r\n        setMessage(\"\");\r\n      } else {\r\n        setMessage(res.data.message);\r\n      }\r\n    });\r\n  };\r\n\r\n  const logout = () => {\r\n    setToken();\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  const AuthContextValue = {\r\n    currentUser,\r\n    message,\r\n    login,\r\n    logout,\r\n  };\r\n  return (\r\n    <AuthContext.Provider value={AuthContextValue}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nconst useAuth = () => React.useContext(AuthContext);\r\n\r\nexport { AuthProvider, useAuth };\r\n"]},"metadata":{},"sourceType":"module"}