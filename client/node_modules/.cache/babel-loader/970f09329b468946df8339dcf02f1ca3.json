{"ast":null,"code":"import axios from \"axios\";\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\nconst instance = axios.create({\n  baseURL: \"http://localhost:5000/api\",\n  headers: {\n    \"content-type\": \"application/json\"\n  },\n  responseType: \"json\",\n  withCredentials: true\n});\naxios.interceptors.response.use(undefined, function (error) {\n  alert(error.toString());\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(undefined, authInterceptor(apiClient)); // const refreshAuthLogic = (failedRequest) =>\n//   instance\n//     .post(\"refresh_token\")\n//     .then((tokenRefreshResponse) => {\n//       localStorage.setItem(\"accessToken\", tokenRefreshResponse.data.access);\n//       failedRequest.response.config.headers[\"Authorization\"] =\n//         \"Bearer \" + tokenRefreshResponse.data.access;\n//       return Promise.resolve();\n//     })\n//     .catch((error) => {\n//       console.log(\"refresh fail\");\n//       localStorage.setItem(\"accessToken\", null);\n//       localStorage.setItem(\"refreshToken\", null);\n//       //pushToLogin();\n//       return Promise.reject(error);\n//     });\n// createAuthRefreshInterceptor(instance, refreshAuthLogic);\n\nexport default instance;","map":{"version":3,"sources":["D:/projects/React/login-demo/client/src/axios/config.js"],"names":["axios","createAuthRefreshInterceptor","instance","create","baseURL","headers","responseType","withCredentials","interceptors","response","use","undefined","error","alert","toString","Promise","reject","authInterceptor","apiClient"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,4BAAP,MAAyC,oBAAzC;AAEA,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAE,2BADmB;AAE5BC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT,GAFmB;AAK5BC,EAAAA,YAAY,EAAE,MALc;AAM5BC,EAAAA,eAAe,EAAE;AANW,CAAb,CAAjB;AASAP,KAAK,CAACQ,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgCC,SAAhC,EAA2C,UAAUC,KAAV,EAAiB;AAC1DC,EAAAA,KAAK,CAACD,KAAK,CAACE,QAAN,EAAD,CAAL;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,CAHD;AAKAZ,KAAK,CAACQ,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgCC,SAAhC,EAA2CM,eAAe,CAACC,SAAD,CAA1D,E,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAehB,QAAf","sourcesContent":["import axios from \"axios\";\r\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://localhost:5000/api\",\r\n  headers: {\r\n    \"content-type\": \"application/json\",\r\n  },\r\n  responseType: \"json\",\r\n  withCredentials: true,\r\n});\r\n\r\naxios.interceptors.response.use(undefined, function (error) {\r\n  alert(error.toString());\r\n  return Promise.reject(error);\r\n});\r\n\r\naxios.interceptors.response.use(undefined, authInterceptor(apiClient));\r\n\r\n// const refreshAuthLogic = (failedRequest) =>\r\n//   instance\r\n//     .post(\"refresh_token\")\r\n//     .then((tokenRefreshResponse) => {\r\n//       localStorage.setItem(\"accessToken\", tokenRefreshResponse.data.access);\r\n//       failedRequest.response.config.headers[\"Authorization\"] =\r\n//         \"Bearer \" + tokenRefreshResponse.data.access;\r\n//       return Promise.resolve();\r\n//     })\r\n//     .catch((error) => {\r\n//       console.log(\"refresh fail\");\r\n//       localStorage.setItem(\"accessToken\", null);\r\n//       localStorage.setItem(\"refreshToken\", null);\r\n//       //pushToLogin();\r\n//       return Promise.reject(error);\r\n//     });\r\n// createAuthRefreshInterceptor(instance, refreshAuthLogic);\r\n\r\nexport default instance;\r\n"]},"metadata":{},"sourceType":"module"}