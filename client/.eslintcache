[{"D:\\projects\\React\\login-demo\\client\\src\\index.js":"1","D:\\projects\\React\\login-demo\\client\\src\\App.js":"2","D:\\projects\\React\\login-demo\\client\\src\\pages\\Landing.js":"3","D:\\projects\\React\\login-demo\\client\\src\\pages\\Home.js":"4","D:\\projects\\React\\login-demo\\client\\src\\ProtectedRoute.js":"5","D:\\projects\\React\\login-demo\\client\\src\\AuthContext.js":"6"},{"size":453,"mtime":1611830628330,"results":"7","hashOfConfig":"8"},{"size":594,"mtime":1611893663561,"results":"9","hashOfConfig":"8"},{"size":3240,"mtime":1612014217029,"results":"10","hashOfConfig":"8"},{"size":966,"mtime":1612017958666,"results":"11","hashOfConfig":"8"},{"size":475,"mtime":1611921041175,"results":"12","hashOfConfig":"8"},{"size":2829,"mtime":1612018078866,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1h6blih",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"D:\\projects\\React\\login-demo\\client\\src\\index.js",[],["29","30"],"D:\\projects\\React\\login-demo\\client\\src\\App.js",[],"D:\\projects\\React\\login-demo\\client\\src\\pages\\Landing.js",["31","32","33"],"import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useAuth } from \"../AuthContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nfunction Landing() {\r\n  //registration\r\n  const [usernameReg, setUsernameReg] = useState(\"\");\r\n  const [passwordReg, setPasswordReg] = useState(\"\");\r\n\r\n  //login\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [messageReg, setMessageReg] = useState(\"\");\r\n\r\n  const { login, message, currentUser } = useAuth();\r\n\r\n  Axios.defaults.withCredentials = true;\r\n\r\n  const usernameRegHandler = (event) => {\r\n    setUsernameReg(event.target.value);\r\n  };\r\n  const passwordRegHandler = (event) => {\r\n    setPasswordReg(event.target.value);\r\n  };\r\n\r\n  const usernameHandler = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n  const passwordHandler = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const register = () => {\r\n    Axios.post(\"http://localhost:5000/api/register\", {\r\n      username: usernameReg,\r\n      password: passwordReg,\r\n    }).then((res) => {\r\n      if (res.data.success) {\r\n        setUsernameReg(\"\");\r\n        setPasswordReg(\"\");\r\n        alert(res.data.message);\r\n      } else {\r\n        alert(res.data.message);\r\n      }\r\n    });\r\n  };\r\n\r\n  const loginHandler = (e) => {\r\n    e.preventDefault();\r\n    login(username, password);\r\n  };\r\n\r\n  const checkAuthentication = () => {\r\n    // Axios.get(\"http://localhost:5000/api/userInfo\", {\r\n    //   headers: { \"x-access-token\": localStorage.getItem(\"token\") },\r\n    // }).then((response) => {\r\n    //   console.log(response);\r\n    // });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {currentUser ? (\r\n        <Redirect to=\"/home\" />\r\n      ) : (\r\n        <div>\r\n          <h1>Landing</h1>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <h2>Registration</h2>\r\n            <label>Username</label>\r\n            <input\r\n              type=\"text\"\r\n              value={usernameReg}\r\n              onChange={usernameRegHandler}\r\n            />\r\n            <label>password</label>\r\n            <input\r\n              type=\"password\"\r\n              value={passwordReg}\r\n              onChange={passwordRegHandler}\r\n            />\r\n            <p>{messageReg}</p>\r\n            <button onClick={register}>Register</button>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <h2>Login</h2>\r\n            <label>Username</label>\r\n            <input type=\"text\" value={username} onChange={usernameHandler} />\r\n            <label>password</label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={passwordHandler}\r\n            />\r\n            <button onClick={loginHandler}>Login</button>\r\n          </div>\r\n          <p>{message}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","D:\\projects\\React\\login-demo\\client\\src\\pages\\Home.js",[],"D:\\projects\\React\\login-demo\\client\\src\\ProtectedRoute.js",[],"D:\\projects\\React\\login-demo\\client\\src\\AuthContext.js",["34"],"import React, { createContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\r\naxios.defaults.withCredentials = true;\r\nconst AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(null);\r\n\r\n  const refreshAuthLogic = (failedRequest) => {\r\n    console.log(\"INTERCEPRTTT\");\r\n    return axios\r\n      .post(\"http://localhost:5000/api/refresh_token\")\r\n      .then((tokenRefreshResponse) => {\r\n        setToken(tokenRefreshResponse.data.token);\r\n        console.log(`NEW FUCKING TOKEN : ${tokenRefreshResponse.data.token}`);\r\n        failedRequest.response.config.headers[\"x-access-token\"] =\r\n          tokenRefreshResponse.data.token;\r\n        return Promise.resolve();\r\n      });\r\n  };\r\n\r\n  createAuthRefreshInterceptor(axios, refreshAuthLogic);\r\n\r\n  const getUser = () => {\r\n    console.log(\"call get user1\");\r\n    axios\r\n      .get(\"http://localhost:5000/api/userInfo\", {\r\n        headers: { \"x-access-token\": token },\r\n      })\r\n      .then((response) => {\r\n        console.log(\"call get user2\");\r\n        console.log(response);\r\n        if (response.data.auth) {\r\n          setCurrentUser(response.data.user);\r\n          setToken(response.data.token);\r\n        } else {\r\n          if (response.data.message === \"Authentication failed\") {\r\n            //setToken();\r\n          }\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        //setToken();\r\n        //window.location.reload();\r\n      });\r\n  };\r\n\r\n  const login = (username, password) => {\r\n    axios\r\n      .post(\"http://localhost:5000/api/login\", {\r\n        username: username,\r\n        password: password,\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        if (res.data.auth) {\r\n          setCurrentUser(res.data.user);\r\n          setToken(res.data.token);\r\n          setMessage(\"\");\r\n        } else {\r\n          setMessage(res.data.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const setNewToken = (newToken) => {\r\n    if (newToken !== token) {\r\n      console.log(\"set new token\");\r\n      setToken(newToken);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setToken();\r\n    //window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  const AuthContextValue = {\r\n    currentUser,\r\n    message,\r\n    login,\r\n    logout,\r\n    token,\r\n    setNewToken,\r\n  };\r\n  return (\r\n    <AuthContext.Provider value={AuthContextValue}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nconst useAuth = () => React.useContext(AuthContext);\r\n\r\nexport { AuthProvider, useAuth };\r\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":1,"column":17,"nodeType":"41","messageId":"42","endLine":1,"endColumn":26},{"ruleId":"39","severity":1,"message":"43","line":15,"column":22,"nodeType":"41","messageId":"42","endLine":15,"endColumn":35},{"ruleId":"39","severity":1,"message":"44","line":55,"column":9,"nodeType":"41","messageId":"42","endLine":55,"endColumn":28},{"ruleId":"45","severity":1,"message":"46","line":86,"column":6,"nodeType":"47","endLine":86,"endColumn":8,"suggestions":"48"},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setMessageReg' is assigned a value but never used.","'checkAuthentication' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["51"],"no-global-assign","no-unsafe-negation",{"desc":"52","fix":"53"},"Update the dependencies array to be: [getUser]",{"range":"54","text":"55"},[2471,2473],"[getUser]"]